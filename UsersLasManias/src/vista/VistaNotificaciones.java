/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.ControlUsuarios;
import java.util.Observable;
import java.util.Observer;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import modelo.Notificacion;
import modelo.Usuario;

/**
 *
 * @author Javi
 */
public class VistaNotificaciones extends JFrame implements ListSelectionListener{
    private ControlUsuarios  controlador;
    private VistaPrincipal  vPrincipal;
    private String nombreUsuario;
    private DefaultListModel listModelNotificaciones;
    private ImageIcon imagenAceptar;
    private ImageIcon imagenNoAceptar;
    private Set<Notificacion> notificaciones;
    public int MENSAJE = 0;
    public int INVITACION_AMISTAD = 1;
    public int INVITACION_JUGAR = 2;
    
    private final String RUTA_RECURSOS = "./src/recursos/";
    /**
     * Creates new form VistaNotificaciones
     */
    public VistaNotificaciones(ControlUsuarios _controlador, VistaPrincipal _vPrincipal, String _nombreUsuario) {
        initComponents();
        this.vPrincipal = _vPrincipal;
        this.controlador = _controlador;
        this.nombreUsuario = _nombreUsuario;
        this.setResizable(false);
        
        imagenAceptar = new ImageIcon(RUTA_RECURSOS+"aceptar.png");
        imagenNoAceptar = new ImageIcon(RUTA_RECURSOS+"noAceptar.png");
        
        botonAceptar.setIcon(imagenAceptar);
        botonNoAceptar.setIcon(imagenNoAceptar);
        actualizarVista(_nombreUsuario);
    }

    public void actualizarVista(String _nombreUsuario){
        notificaciones = controlador.listaNotificaciones(_nombreUsuario);
        listModelNotificaciones = new DefaultListModel();
        llenarLista();
        textMensaje.setEditable(false);

        listaNotificaciones.setModel(listModelNotificaciones);
        listaNotificaciones.addListSelectionListener(this);
    }
    
    private void llenarLista(){
        int i = 0;
        for (Notificacion notificacion : notificaciones) {
            listModelNotificaciones.add(i, notificacion);
            i++;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaNotificaciones = new javax.swing.JList();
        botonAceptar = new javax.swing.JButton();
        botonNoAceptar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textMensaje = new javax.swing.JTextArea();
        botonVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Las Mañas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Notificaciones"));

        jScrollPane1.setViewportView(listaNotificaciones);

        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonNoAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNoAceptarActionPerformed(evt);
            }
        });

        textMensaje.setColumns(20);
        textMensaje.setRows(5);
        jScrollPane2.setViewportView(textMensaje);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(229, Short.MAX_VALUE)
                .addComponent(botonAceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonNoAceptar)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAceptar)
                    .addComponent(botonNoAceptar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonVolver)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(botonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        Notificacion notif = (Notificacion)listaNotificaciones.getSelectedValue();
        int opcion = controlador.aceptarNotificacion(notif.getCodigo());
        if(opcion == INVITACION_JUGAR){
            JOptionPane.showMessageDialog(this, "Has aceptado la invitación para jugar.");
            this.setVisible(false);
            
        }else if (opcion == INVITACION_AMISTAD){
            JOptionPane.showMessageDialog(this, "Has aceptado la invitación de amistad.");
            actualizarVista(nombreUsuario);
        }else if (opcion == MENSAJE){
            JOptionPane.showMessageDialog(this, "No tiene efecto.");
        }
    }//GEN-LAST:event_botonAceptarActionPerformed

    private void botonNoAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNoAceptarActionPerformed
        Notificacion notif = (Notificacion)listaNotificaciones.getSelectedValue();
        int opcion = controlador.rechazarNotificacion(notif.getCodigo());
        if(opcion == INVITACION_JUGAR){
            JOptionPane.showMessageDialog(this, "Has rechazado la invitación para jugar.");
            actualizarVista(nombreUsuario);
            
        }else if (opcion == INVITACION_AMISTAD){
            JOptionPane.showMessageDialog(this, "Has rechazado la invitación de amistad.");
            actualizarVista(nombreUsuario);
        }else if (opcion == MENSAJE){
            JOptionPane.showMessageDialog(this, "Has eliminado la notificación.");
            actualizarVista(nombreUsuario);
        }
    }//GEN-LAST:event_botonNoAceptarActionPerformed

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        this.setVisible(false);
        vPrincipal.setVisible(true);
    }//GEN-LAST:event_botonVolverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonNoAceptar;
    private javax.swing.JButton botonVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listaNotificaciones;
    private javax.swing.JTextArea textMensaje;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        
        Notificacion notif = (Notificacion)listaNotificaciones.getSelectedValue();
        if(!notif.getMensaje().isEmpty()){
            textMensaje.setText(notif.getMensaje());
        }
    }
}
